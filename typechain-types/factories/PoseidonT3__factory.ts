/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PoseidonT3, PoseidonT3Interface } from "../PoseidonT3";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "input",
        type: "uint256[2]",
      },
    ],
    name: "poseidon",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61014961003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c806329a5f2f61461003a575b600080fd5b61004e610048366004610060565b50600090565b60405190815260200160405180910390f35b600060408284031215610071578081fd5b82601f83011261007f578081fd5b6040516040810181811067ffffffffffffffff821117156100a2576100a26100e4565b80604052508083856040860111156100b8578384fd5b835b60028110156100d95781358352602092830192909101906001016100ba565b509195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212204c10751e12864e50953263f35640ccbd80afb4bb71580abdebef8b769900e53c64736f6c63430008040033";

type PoseidonT3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoseidonT3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoseidonT3__factory extends ContractFactory {
  constructor(...args: PoseidonT3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "PoseidonT3";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PoseidonT3> {
    return super.deploy(overrides || {}) as Promise<PoseidonT3>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PoseidonT3 {
    return super.attach(address) as PoseidonT3;
  }
  connect(signer: Signer): PoseidonT3__factory {
    return super.connect(signer) as PoseidonT3__factory;
  }
  static readonly contractName: "PoseidonT3";
  public readonly contractName: "PoseidonT3";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoseidonT3Interface {
    return new utils.Interface(_abi) as PoseidonT3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoseidonT3 {
    return new Contract(address, _abi, signerOrProvider) as PoseidonT3;
  }
}
