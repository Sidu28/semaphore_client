/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SemaphoreClient,
  SemaphoreClientInterface,
} from "../SemaphoreClient";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Semaphore",
        name: "_semaphore",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "signalIndex",
        type: "uint256",
      },
    ],
    name: "SignalBroadcastByClient",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_signal",
        type: "bytes",
      },
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256",
        name: "_root",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nullifiersHash",
        type: "uint256",
      },
      {
        internalType: "uint232",
        name: "_externalNullifier",
        type: "uint232",
      },
    ],
    name: "broadcastSignal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getExternalNullifierBySignalIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getSignalBySignalIndex",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextSignalIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "semaphore",
    outputs: [
      {
        internalType: "contract Semaphore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "signalIndexToExternalNullifier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "signalIndexToSignal",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060025534801561001557600080fd5b5060405161081038038061081083398101604081905261003491610059565b600380546001600160a01b0319166001600160a01b0392909216919091179055610087565b60006020828403121561006a578081fd5b81516001600160a01b0381168114610080578182fd5b9392505050565b61077a806100966000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637b5d25341161005b5780637b5d2534146100ee5780638d2d593b14610133578063911ca41e1461013c578063f9cdb5cd1461014f57600080fd5b80630e57596f1461008257806327acf71b14610097578063740afb77146100c0575b600080fd5b6100956100903660046104eb565b61016f565b005b6100aa6100a53660046105b5565b610283565b6040516100b79190610618565b60405180910390f35b6100e06100ce3660046105b5565b60009081526001602052604090205490565b6040519081526020016100b7565b60035461010e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b7565b6100e060025481565b6100aa61014a3660046105b5565b61031d565b6100e061015d3660046105b5565b60016020526000908152604090205481565b600254600081815260208181526040909120875161018f928901906103bf565b506002805460009081526001602052604081206001600160e81b0385169055815491906101bb83610707565b90915550506003546040517f0e57596f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690630e57596f9061021e9089908990899089908990600401610632565b600060405180830381600087803b15801561023857600080fd5b505af115801561024c573d6000803e3d6000fd5b50506040518392507faa676fd106f1023de6c9eafff9af5bc8e299b3493d3aa816a3278a15d055657b9150600090a2505050505050565b6000602081905290815260409020805461029c906106cc565b80601f01602080910402602001604051908101604052809291908181526020018280546102c8906106cc565b80156103155780601f106102ea57610100808354040283529160200191610315565b820191906000526020600020905b8154815290600101906020018083116102f857829003601f168201915b505050505081565b600081815260208190526040902080546060919061033a906106cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610366906106cc565b80156103b35780601f10610388576101008083540402835291602001916103b3565b820191906000526020600020905b81548152906001019060200180831161039657829003601f168201915b50505050509050919050565b8280546103cb906106cc565b90600052602060002090601f0160209004810192826103ed5760008555610433565b82601f1061040657805160ff1916838001178555610433565b82800160010185558215610433579182015b82811115610433578251825591602001919060010190610418565b5061043f929150610443565b5090565b5b8082111561043f5760008155600101610444565b600082601f830112610468578081fd5b60405161010080820182811067ffffffffffffffff8211171561048d5761048d61072e565b60405281848281018710156104a0578485fd5b8492505b60088310156104c4578035825260019290920191602091820191016104a4565b509195945050505050565b80356001600160e81b03811681146104e657600080fd5b919050565b60008060008060006101808688031215610503578081fd5b853567ffffffffffffffff8082111561051a578283fd5b818801915088601f83011261052d578283fd5b81356020828211156105415761054161072e565b610553601f8301601f1916820161069b565b92508183528a81838601011115610568578485fd5b8181850182850137848183850101528298506105868b828c01610458565b975050505050610120860135925061014086013591506105a961016087016104cf565b90509295509295909350565b6000602082840312156105c6578081fd5b5035919050565b60008151808452815b818110156105f2576020818501810151868301820152016105d6565b818111156106035782602083870101525b50601f01601f19169290920160200192915050565b60208152600061062b60208301846105cd565b9392505050565b6000610180808352610646818401896105cd565b91505060208083018760005b600881101561066f57815183529183019190830190600101610652565b5050505084610120830152836101408301526001600160e81b0383166101608301529695505050505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156106c4576106c461072e565b604052919050565b600181811c908216806106e057607f821691505b6020821081141561070157634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561072757634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212203ba26ec89be3923231e86e0af2853b791fb3b805214afcdc4b72620ceabed13164736f6c63430008040033";

type SemaphoreClientConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SemaphoreClientConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SemaphoreClient__factory extends ContractFactory {
  constructor(...args: SemaphoreClientConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SemaphoreClient";
  }

  deploy(
    _semaphore: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SemaphoreClient> {
    return super.deploy(
      _semaphore,
      overrides || {}
    ) as Promise<SemaphoreClient>;
  }
  getDeployTransaction(
    _semaphore: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_semaphore, overrides || {});
  }
  attach(address: string): SemaphoreClient {
    return super.attach(address) as SemaphoreClient;
  }
  connect(signer: Signer): SemaphoreClient__factory {
    return super.connect(signer) as SemaphoreClient__factory;
  }
  static readonly contractName: "SemaphoreClient";
  public readonly contractName: "SemaphoreClient";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SemaphoreClientInterface {
    return new utils.Interface(_abi) as SemaphoreClientInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SemaphoreClient {
    return new Contract(address, _abi, signerOrProvider) as SemaphoreClient;
  }
}
