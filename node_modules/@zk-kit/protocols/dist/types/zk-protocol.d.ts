import { FullProof, SolidityProof } from "@zk-kit/types";
export default class ZkProtocol {
    /**
     * Generates a SnarkJS full proof with Groth16.
     * @param witness The parameters for creating the proof.
     * @param wasmFilePath The WASM file path.
     * @param finalZkeyPath The ZKey file path.
     * @returns The full SnarkJS proof.
     */
    static genProof(witness: any, wasmFilePath: string, finalZkeyPath: string): Promise<FullProof>;
    /**
     * Verifies a zero-knowledge SnarkJS proof.
     * @param verificationKey The zero-knowledge verification key.
     * @param fullProof The SnarkJS full proof.
     * @returns True if the proof is valid, false otherwise.
     */
    static verifyProof(verificationKey: string, fullProof: FullProof): Promise<boolean>;
    /**
     * Converts a full proof in a proof compatible with the Verifier.sol method inputs.
     * @param fullProof The proof generated with SnarkJS.
     * @returns The Solidity compatible proof.
     */
    static packToSolidityProof(fullProof: FullProof): SolidityProof;
}
